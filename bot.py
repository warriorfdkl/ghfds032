import os
import logging
from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup, MenuButtonWebApp
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
from dotenv import load_dotenv
import openai
from PIL import Image
import io

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
WEBAPP_URL = os.getenv('WEBAPP_URL')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
openai.api_key = OPENAI_API_KEY

async def setup_menu_button(application: Application):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –¥–ª—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    await application.bot.set_chat_menu_button(
        menu_button=MenuButtonWebApp(
            text="üîç –°–∫–∞–Ω–µ—Ä –ï–¥—ã",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )
    )

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    keyboard = [
        [InlineKeyboardButton(
            "üì∏ –û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä –µ–¥—ã",
            web_app=WebAppInfo(url=WEBAPP_URL)
        )],
        [InlineKeyboardButton(
            "‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è",
            callback_data="help"
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_message = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–∫–∞–Ω–µ—Ä –ï–¥—ã!\n\n"
        "–≠—Ç–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n"
        "üîç –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–∞ —Ñ–æ—Ç–æ\n"
        "üìä –£–∑–Ω–∞–≤–∞—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥\n"
        "ü•ó –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–∞–≤–µ\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫–∞–Ω–µ—Ä—É."
    )
    
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    await query.answer()

    if query.data == "help":
        help_text = (
            "ü§ñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –°–∫–∞–Ω–µ—Ä–æ–º –ï–¥—ã:\n\n"
            "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É 'üì∏ –û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä –µ–¥—ã' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é\n"
            "2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ\n"
            "3. –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ –µ–¥—É\n"
            "4. –£–≤–∏–¥–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
            "5. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å—ä–µ–º–∫–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\n\n"
            "üîÑ –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É –∫–∞–º–µ—Ä–∞–º–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–ø—ã—à–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n"
            "üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é Telegram"
        )
        await query.message.reply_text(help_text)

async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
        photo_data = update.message.web_app_data.data
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        image = Image.open(io.BytesIO(photo_data))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        processing_message = await update.message.reply_text("üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–µ –±–ª—é–¥–æ...")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é OpenAI Vision
        response = await openai.chat.completions.create(
            model="gpt-4-vision-preview",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {
                            "type": "text",
                            "text": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ –±–ª—é–¥–æ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å: 1) –ö–∞–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞ —Ñ–æ—Ç–æ 2) –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π 3) –û—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –û—Ñ–æ—Ä–º–∏ –æ—Ç–≤–µ—Ç –∫—Ä–∞—Å–∏–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è —ç–º–æ–¥–∑–∏."
                        },
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:image/jpeg;base64,{photo_data.hex()}"
                            }
                        }
                    ]
                }
            ],
            max_tokens=500
        )

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        await processing_message.delete()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
        await update.message.reply_text(response.choices[0].message.content)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help."""
    help_text = (
        "ü§ñ –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –°–∫–∞–Ω–µ—Ä–∞ –ï–¥—ã\n\n"
        "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üì∏ –û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä –µ–¥—ã' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é\n"
        "2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ\n"
        "3. –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ –µ–¥—É\n"
        "4. –£–≤–∏–¥–∏—Ç–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        "5. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å—ä–µ–º–∫–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    await update.message.reply_text(help_text)

async def post_init(application: Application):
    """–î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞."""
    await setup_menu_button(application)

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_TOKEN).post_init(post_init).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CallbackQueryHandler(button_callback))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 